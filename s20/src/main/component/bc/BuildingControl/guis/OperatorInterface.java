package bc.BuildingControl.guis;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class OperatorInterface {
    public JPanel pnlOperatorInterface;
    public JPanel pnlTempDisplay;
    public JPanel pnlTempControls;
    public JPanel pnlSetPoint;
    public JPanel pnlAlarm;
    public JSpinner spnLowSetPoint;
    public JSpinner spnHighSetPoint;
    public JButton btnClearAlarm;
    public SimpleTempDisplay simpleTempDisplay1;
    public JLabel lblAlarmMessage;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        pnlOperatorInterface = new JPanel();
        pnlOperatorInterface.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        pnlOperatorInterface.setPreferredSize(new Dimension(500, 334));
        pnlTempDisplay = new JPanel();
        pnlTempDisplay.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        pnlOperatorInterface.add(pnlTempDisplay, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(164, 198), null, 0, false));
        pnlTempDisplay.setBorder(BorderFactory.createTitledBorder(null, "Temperature", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        pnlTempDisplay.add(simpleTempDisplay1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        pnlTempControls = new JPanel();
        pnlTempControls.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        pnlOperatorInterface.add(pnlTempControls, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        pnlSetPoint = new JPanel();
        pnlSetPoint.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        pnlTempControls.add(pnlSetPoint, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        pnlSetPoint.setBorder(BorderFactory.createTitledBorder(null, "Desired", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JLabel label1 = new JLabel();
        label1.setText("low");
        pnlSetPoint.add(label1);
        spnLowSetPoint = new JSpinner();
        pnlSetPoint.add(spnLowSetPoint);
        final JLabel label2 = new JLabel();
        label2.setText("(ºF)");
        pnlSetPoint.add(label2);
        final Spacer spacer1 = new Spacer();
        pnlSetPoint.add(spacer1);
        final JLabel label3 = new JLabel();
        label3.setText("high");
        pnlSetPoint.add(label3);
        spnHighSetPoint = new JSpinner();
        pnlSetPoint.add(spnHighSetPoint);
        final JLabel label4 = new JLabel();
        label4.setText("(ºF)");
        pnlSetPoint.add(label4);
        pnlAlarm = new JPanel();
        pnlAlarm.setLayout(new BorderLayout(0, 0));
        pnlTempControls.add(pnlAlarm, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        pnlAlarm.setBorder(BorderFactory.createTitledBorder(null, "Alarm", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        btnClearAlarm = new JButton();
        btnClearAlarm.setEnabled(true);
        btnClearAlarm.setText("Clear");
        pnlAlarm.add(btnClearAlarm, BorderLayout.EAST);
        lblAlarmMessage = new JLabel();
        lblAlarmMessage.setText("");
        pnlAlarm.add(lblAlarmMessage, BorderLayout.WEST);
        label1.setLabelFor(spnLowSetPoint);
        label3.setLabelFor(spnHighSetPoint);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return pnlOperatorInterface;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        simpleTempDisplay1 = new SimpleTempDisplay(80f, 50f, 100f);
    }
}
